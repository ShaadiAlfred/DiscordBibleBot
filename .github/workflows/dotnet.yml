name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v1.9.0
        with:
          dotnet-version: '6.x.x'
          
      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore
        
      - name: Test
        run: dotnet test --no-build --verbosity normal
  
  release:
      name: Release
      strategy:
        matrix:
          kind: ['linux', 'windows', 'macOS']
          include:
            - kind: linux
              os: ubuntu-latest
              target: linux-x64
            - kind: windows
              os: windows-latest
              target: win-x64
            - kind: macOS
              os: macos-latest
              target: osx-x64
      runs-on: ${{ matrix.os }}
      
      steps:
        - name: Checkout
          uses: actions/checkout@v1

        - name: Setup dotnet
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: '6.x.x'
            
        - name: Build
          shell: bash
          run: |
            # Define some variables for things we need
            tag=$(git describe --tags --abbrev=0)
            release_name="BibleDiscordBot-$tag-${{ matrix.target }}"

            # Build everything
            dotnet publish ./src/DiscordBibleBot/DiscordBibleBot.csproj -p:PublishSingleFile=true -p:UseAppHost=true -r ${{ matrix.target }} --self-contained true -c Release -o "$release_name"

            # Pack files
            if [ "${{ matrix.target }}" == "win-x64" ]; then
              7z a -tzip "${release_name}.zip" "./${release_name}/*"
            else
              tar czvf "${release_name}.tar.gz" "$release_name"
            fi

            # Delete output directory
            rm -r "$release_name"
            
        - name: Get latest release version number
          id: get_version
          uses: battila7/get-version-action@v2
          
        - name: Publish
          uses: softprops/action-gh-release@v1
          with:
            tag_name: "DiscordBibleBot-v${{ steps.get_version.outputs.release_tag }}-${{ matrix.kind }}"
            files: "BibleDiscordBot*"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
